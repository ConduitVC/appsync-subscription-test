schema {
  mutation: Mutation
  query: Query
  subscription: Subscription
} 

type Query {
  quoteRequests(query: [AttributeFilter]): [QuoteRequest]!
}

type Mutation {
  requestQuote(quoteRequest: QuoteRequestInput!): QuoteRequest!
  respondToQuote(quoteRequestId: ID!, response: QuoteResponseInput!): CreatedQuoteResponse!
}

type Subscription {
  subscribeToQuoteRequest: QuoteRequest!
  @aws_subscribe(mutations: ["requestQuote"])
  subscribeToQuoteResponse: CreatedQuoteResponse
  @aws_subscribe(mutations: ["respondToQuote"])
}

enum quoteRequestStatus {
	Cancelled
	Open
	RespondedTo
	Closed
}

enum quoteResponseStatus {
	Open
  Rejected
  Expired
}

type QuoteRequest {
  id: ID!
  customerId: String!
  commodity: String!
  amount: Int!
	status: quoteRequestStatus!
  quoteResponse: SimpleResponse
}

type CreatedQuoteResponse {
  id: ID!
  ask: Float!
	expires: Float!
  status: quoteResponseStatus!
  traderId: String!
  respondedToQuote: QuoteRequest!
}

type SimpleResponse {
  id: ID!
  quoteRequestId: ID!
  ask: Float!
	expires: Float!
  status: quoteResponseStatus!
  traderId: String!
}

input QuoteRequestInput {
  commodity: String!
  amount: Int!
}

input QuoteResponseInput {
  ask: Float!
  expires: Float
}

input AttributeFilter {
  expression: String!
  expressionName: String!
  expressionNumberValue: Float
  expressionStringValue: String
}
